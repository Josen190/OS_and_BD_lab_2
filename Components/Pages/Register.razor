@page "/register"
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Forms
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager
@inject NavigationManager Navigation

<h3>Регистрация</h3>

<EditForm Model="@registerModel" OnValidSubmit="@HandleRegister" FormName="RegistrationForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label>Email:</label>
        <InputText @bind-Value="registerModel.Email" />
    </div>
    <div>
        <label>Пароль:</label>
        <InputText @bind-Value="registerModel.Password" InputType="password" />
    </div>
    <div>
        <label>Подтверждение пароля:</label>
        <InputText @bind-Value="registerModel.ConfirmPassword" InputType="password" />
    </div>
    <button type="submit">Зарегистрироваться</button>
</EditForm>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private async Task HandleRegister()
    {
        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            // Пароли не совпадают - обработка ошибки
            return;
        }

        var user = new IdentityUser { UserName = registerModel.Email, Email = registerModel.Email };
        var createResult = await UserManager.CreateAsync(user, registerModel.Password);
        if (createResult.Succeeded)
        {
            // После успешной регистрации сразу авторизуем пользователя
            await SignInManager.SignInAsync(user, isPersistent: false);
            Navigation.NavigateTo("/");
        }
        else
        {
            // Обработать ошибки (например, вывести ValidationSummary)
        }
    }

    public class RegisterModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
        public string ConfirmPassword { get; set; }
    }
}
