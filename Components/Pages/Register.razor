@page "/register"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Forms
@using OS_and_BD_lab_2.Models
@using OS_and_BD_lab_2.Service
@inject UserService UserService
@inject NavigationManager Navigation
@inject TokenService TokenService
@inject UserSessionService UserSession

<h3>Регистрация</h3>

<EditForm Model="@registerModel" OnValidSubmit="@HandleRegister" FormName="RegistrationForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label>Name:</label>
        <InputText @bind-Value="registerModel.Name" />
    </div>
    <div>
        <label>Email:</label>
        <InputText @bind-Value="registerModel.Login" />
    </div>
    <div>
        <label>Пароль:</label>
        <InputText @bind-Value="registerModel.Password" InputType="password" />
    </div>
    <div>
        <label>Подтверждение пароля:</label>
        <InputText @bind-Value="registerModel.ConfirmPassword" InputType="password" />
    </div>
    <button type="submit">Зарегистрироваться</button>
</EditForm>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private async Task HandleRegister()
    {
        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            // Пароли не совпадают - обработка ошибки
            return;
        }

        var user = new User { Name = registerModel.Name, Login = registerModel.Login, Password = registerModel.Password };
        var createResult = await UserService.RegisterUserAsync(user);
        if (createResult)
        {
            // После успешной регистрации сразу авторизуем пользователя
            var user_auth = await UserService.AuthenticateUserAsync(registerModel.Login, registerModel.Password);
            if (user_auth != null)
            {
                UserSession.user = user_auth;
                UserSession.JwtToken = TokenService.GenerateToken(user_auth);
                Navigation.NavigateTo("/");
            }
            Navigation.NavigateTo("/");
        }
        else
        {
            // Обработать ошибки (например, вывести ValidationSummary)
        }
    }

    public class RegisterModel
    {
        public string Name { get; set; }
        public string Login { get; set; }
        public string Password { get; set; }
        public string ConfirmPassword { get; set; }
    }
}
